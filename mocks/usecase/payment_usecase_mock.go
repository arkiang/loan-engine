// Code generated by MockGen. DO NOT EDIT.
// Source: internal/usecase/payment_usecase.go
//
// Generated by this command:
//
//	mockgen -source=internal/usecase/payment_usecase.go -destination=mocks/usecase/payment_usecase_mock.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	model "loan-engine/internal/model"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockPaymentUsecase is a mock of PaymentUsecase interface.
type MockPaymentUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockPaymentUsecaseMockRecorder
	isgomock struct{}
}

// MockPaymentUsecaseMockRecorder is the mock recorder for MockPaymentUsecase.
type MockPaymentUsecaseMockRecorder struct {
	mock *MockPaymentUsecase
}

// NewMockPaymentUsecase creates a new mock instance.
func NewMockPaymentUsecase(ctrl *gomock.Controller) *MockPaymentUsecase {
	mock := &MockPaymentUsecase{ctrl: ctrl}
	mock.recorder = &MockPaymentUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPaymentUsecase) EXPECT() *MockPaymentUsecaseMockRecorder {
	return m.recorder
}

// GetPaymentsByLoanID mocks base method.
func (m *MockPaymentUsecase) GetPaymentsByLoanID(loanID uint) ([]model.Payment, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPaymentsByLoanID", loanID)
	ret0, _ := ret[0].([]model.Payment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPaymentsByLoanID indicates an expected call of GetPaymentsByLoanID.
func (mr *MockPaymentUsecaseMockRecorder) GetPaymentsByLoanID(loanID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPaymentsByLoanID", reflect.TypeOf((*MockPaymentUsecase)(nil).GetPaymentsByLoanID), loanID)
}

// MakePayment mocks base method.
func (m *MockPaymentUsecase) MakePayment(payment *model.Payment) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MakePayment", payment)
	ret0, _ := ret[0].(error)
	return ret0
}

// MakePayment indicates an expected call of MakePayment.
func (mr *MockPaymentUsecaseMockRecorder) MakePayment(payment any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MakePayment", reflect.TypeOf((*MockPaymentUsecase)(nil).MakePayment), payment)
}
